name: Blog Content Pipeline

on:
  push:
    branches: [main]
    paths:
      - 'content/_incoming/**'
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  process_content:
    runs-on: ubuntu-latest
    name: Process New Content
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci --no-cache || npm install --no-cache
        
      - name: Check for new content
        id: check_content
        run: |
          NEW_FILES=$(find content/_incoming -type f -name "*.md" | wc -l)
          echo "new_files_count=$NEW_FILES" >> $GITHUB_OUTPUT
          if [ $NEW_FILES -gt 0 ]; then
            echo "found_new_content=true" >> $GITHUB_OUTPUT
            FILENAMES=$(find content/_incoming -type f -name "*.md" -exec basename {} \; | tr '\n' ' ')
            echo "new_file_names=$FILENAMES" >> $GITHUB_OUTPUT
          else
            echo "found_new_content=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Process content directly
        if: steps.check_content.outputs.found_new_content == 'true'
        run: |
          # Run the process-incoming.js script
          node scripts/process-incoming.js
          
          # Configure git for commits
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Commit processed changes
          git add content/posts/ content/_processed/
          git commit -m "Process incoming blog content [auto]" || echo "No changes to commit"
          git push
      
      - name: Build and deploy site
        run: |
          npm run build
          mkdir -p build
          touch build/.nojekyll
          
          # Deploy to GitHub Pages
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Use gh-pages branch for deployment
          npx gh-pages -d build -m "Auto deploy blog [skip ci]"
      
      - name: Send Slack notification
        if: steps.check_content.outputs.found_new_content == 'true'
        id: slack
        uses: slackapi/slack-github-action@v1
        with:
          payload: |
            {
              "text": "Blog content automatically processed and deployed",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "‚úÖ Blog Content Processed & Deployed"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Processed *${{ steps.check_content.outputs.new_files_count }}* new post(s):\n*${{ steps.check_content.outputs.new_file_names }}*"
                  }
                },
                {
                  "type": "divider"
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Your blog has been automatically updated."
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "üîç View Blog"
                      },
                      "style": "primary",
                      "url": "https://harsha-gouru.github.io/"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "üìã View Repo"
                      },
                      "url": "${{ github.server_url }}/${{ github.repository }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK